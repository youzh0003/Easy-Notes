// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.zhiyong.easy_note.injection.module;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_ProvideApplicationContextFactory implements Factory<Context> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideApplicationContextFactory(ApplicationModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public Context get() {
    return Preconditions.checkNotNull(
        module.provideApplicationContext(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Context> create(ApplicationModule module) {
    return new ApplicationModule_ProvideApplicationContextFactory(module);
  }

  /** Proxies {@link ApplicationModule#provideApplicationContext()}. */
  public static Context proxyProvideApplicationContext(ApplicationModule instance) {
    return instance.provideApplicationContext();
  }
}
